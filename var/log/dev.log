[2020-02-05T16:05:10.173955+01:00] request.INFO: Matched route "app_register". {"route":"app_register","route_parameters":{"_route":"app_register","_controller":"App\\Controller\\RegisterController::register"},"request_uri":"https://127.0.0.1:8000/register","method":"GET"} []
[2020-02-05T16:05:10.311914+01:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-02-05T16:05:10.312155+01:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2020-02-05T16:05:10.312275+01:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2020-02-05T16:05:11.860590+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-02-05T16:05:12.790976+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"a578cc"},"request_uri":"https://127.0.0.1:8000/_wdt/a578cc","method":"GET"} []
[2020-02-05T16:05:14.843906+01:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET /favicon.ico" (from "https://127.0.0.1:8000/register")" at C:\xampp\htdocs\Practica\vendor\symfony\http-kernel\EventListener\RouterListener.php line 136 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET /favicon.ico\" (from \"https://127.0.0.1:8000/register\") at C:\\xampp\\htdocs\\Practica\\vendor\\symfony\\http-kernel\\EventListener\\RouterListener.php:136)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/favicon.ico/\". at C:\\xampp\\htdocs\\Practica\\vendor\\symfony\\routing\\Matcher\\Dumper\\CompiledUrlMatcherTrait.php:70)"} []
[2020-02-05T16:05:15.910120+01:00] request.INFO: Matched route "app_register". {"route":"app_register","route_parameters":{"_route":"app_register","_controller":"App\\Controller\\RegisterController::register"},"request_uri":"https://127.0.0.1:8000/register","method":"GET"} []
[2020-02-05T16:05:16.059035+01:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-02-05T16:05:16.059251+01:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2020-02-05T16:05:16.059363+01:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2020-02-05T16:05:16.589947+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-02-05T16:05:31.797733+01:00] request.INFO: Matched route "app_register". {"route":"app_register","route_parameters":{"_route":"app_register","_controller":"App\\Controller\\RegisterController::register"},"request_uri":"https://127.0.0.1:8000/register","method":"POST"} []
[2020-02-05T16:05:31.922483+01:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-02-05T16:05:31.922661+01:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2020-02-05T16:05:31.922738+01:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2020-02-05T16:05:31.933431+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-02-05T16:05:33.722916+01:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-02-05T16:05:33.752914+01:00] doctrine.DEBUG: "ROLLBACK" [] []
[2020-02-05T16:05:33.785541+01:00] request.CRITICAL: Uncaught PHP Exception Doctrine\DBAL\Exception\TableNotFoundException: "An exception occurred while executing 'INSERT INTO user (email, roles, password) VALUES (?, ?, ?)':  SQLSTATE[HY000]: General error: 1 no such table: user" at C:\xampp\htdocs\Practica\vendor\doctrine\dbal\lib\Doctrine\DBAL\Driver\AbstractSQLiteDriver.php line 43 {"exception":"[object] (Doctrine\\DBAL\\Exception\\TableNotFoundException(code: 0): An exception occurred while executing 'INSERT INTO user (email, roles, password) VALUES (?, ?, ?)':\n\nSQLSTATE[HY000]: General error: 1 no such table: user at C:\\xampp\\htdocs\\Practica\\vendor\\doctrine\\dbal\\lib\\Doctrine\\DBAL\\Driver\\AbstractSQLiteDriver.php:43)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDOException(code: HY000): SQLSTATE[HY000]: General error: 1 no such table: user at C:\\xampp\\htdocs\\Practica\\vendor\\doctrine\\dbal\\lib\\Doctrine\\DBAL\\Driver\\PDOConnection.php:63)\n[previous exception] [object] (PDOException(code: HY000): SQLSTATE[HY000]: General error: 1 no such table: user at C:\\xampp\\htdocs\\Practica\\vendor\\doctrine\\dbal\\lib\\Doctrine\\DBAL\\Driver\\PDOConnection.php:61)"} []
[2020-02-05T16:05:35.507381+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"7c02a7"},"request_uri":"https://127.0.0.1:8000/_wdt/7c02a7","method":"GET"} []
[2020-02-05T16:05:37.270212+01:00] request.INFO: Matched route "app_register". {"route":"app_register","route_parameters":{"_route":"app_register","_controller":"App\\Controller\\RegisterController::register"},"request_uri":"https://127.0.0.1:8000/register","method":"GET"} []
[2020-02-05T16:05:37.381219+01:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-02-05T16:05:37.381394+01:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2020-02-05T16:05:37.381472+01:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2020-02-05T16:05:37.871458+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-02-05T16:06:49.836538+01:00] request.INFO: Matched route "app_register". {"route":"app_register","route_parameters":{"_route":"app_register","_controller":"App\\Controller\\RegisterController::register"},"request_uri":"https://127.0.0.1:8000/register","method":"POST"} []
[2020-02-05T16:06:49.988683+01:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-02-05T16:06:49.988875+01:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2020-02-05T16:06:49.988971+01:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2020-02-05T16:06:49.999870+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-02-05T16:06:51.243847+01:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-02-05T16:06:51.261536+01:00] doctrine.DEBUG: "ROLLBACK" [] []
[2020-02-05T16:06:51.285676+01:00] request.CRITICAL: Uncaught PHP Exception Doctrine\DBAL\Exception\TableNotFoundException: "An exception occurred while executing 'INSERT INTO user (email, roles, password) VALUES (?, ?, ?)':  SQLSTATE[HY000]: General error: 1 no such table: user" at C:\xampp\htdocs\Practica\vendor\doctrine\dbal\lib\Doctrine\DBAL\Driver\AbstractSQLiteDriver.php line 43 {"exception":"[object] (Doctrine\\DBAL\\Exception\\TableNotFoundException(code: 0): An exception occurred while executing 'INSERT INTO user (email, roles, password) VALUES (?, ?, ?)':\n\nSQLSTATE[HY000]: General error: 1 no such table: user at C:\\xampp\\htdocs\\Practica\\vendor\\doctrine\\dbal\\lib\\Doctrine\\DBAL\\Driver\\AbstractSQLiteDriver.php:43)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDOException(code: HY000): SQLSTATE[HY000]: General error: 1 no such table: user at C:\\xampp\\htdocs\\Practica\\vendor\\doctrine\\dbal\\lib\\Doctrine\\DBAL\\Driver\\PDOConnection.php:63)\n[previous exception] [object] (PDOException(code: HY000): SQLSTATE[HY000]: General error: 1 no such table: user at C:\\xampp\\htdocs\\Practica\\vendor\\doctrine\\dbal\\lib\\Doctrine\\DBAL\\Driver\\PDOConnection.php:61)"} []
[2020-02-05T16:06:52.840574+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"dade73"},"request_uri":"https://127.0.0.1:8000/_wdt/dade73","method":"GET"} []
[2020-02-05T16:06:54.266636+01:00] request.INFO: Matched route "app_register". {"route":"app_register","route_parameters":{"_route":"app_register","_controller":"App\\Controller\\RegisterController::register"},"request_uri":"https://127.0.0.1:8000/register","method":"GET"} []
[2020-02-05T16:06:54.387111+01:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-02-05T16:06:54.387295+01:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2020-02-05T16:06:54.387368+01:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2020-02-05T16:06:54.738596+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-02-05T16:10:05.537335+01:00] request.INFO: Matched route "app_register". {"route":"app_register","route_parameters":{"_route":"app_register","_controller":"App\\Controller\\RegisterController::register"},"request_uri":"https://127.0.0.1:8000/register","method":"POST"} []
[2020-02-05T16:10:05.665761+01:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-02-05T16:10:05.665921+01:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2020-02-05T16:10:05.665993+01:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2020-02-05T16:10:05.677445+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-02-05T16:10:06.984534+01:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-02-05T16:10:07.006162+01:00] doctrine.DEBUG: "ROLLBACK" [] []
[2020-02-05T16:10:07.030731+01:00] request.CRITICAL: Uncaught PHP Exception Doctrine\DBAL\Exception\TableNotFoundException: "An exception occurred while executing 'INSERT INTO user (email, roles, password) VALUES (?, ?, ?)':  SQLSTATE[HY000]: General error: 1 no such table: user" at C:\xampp\htdocs\Practica\vendor\doctrine\dbal\lib\Doctrine\DBAL\Driver\AbstractSQLiteDriver.php line 43 {"exception":"[object] (Doctrine\\DBAL\\Exception\\TableNotFoundException(code: 0): An exception occurred while executing 'INSERT INTO user (email, roles, password) VALUES (?, ?, ?)':\n\nSQLSTATE[HY000]: General error: 1 no such table: user at C:\\xampp\\htdocs\\Practica\\vendor\\doctrine\\dbal\\lib\\Doctrine\\DBAL\\Driver\\AbstractSQLiteDriver.php:43)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDOException(code: HY000): SQLSTATE[HY000]: General error: 1 no such table: user at C:\\xampp\\htdocs\\Practica\\vendor\\doctrine\\dbal\\lib\\Doctrine\\DBAL\\Driver\\PDOConnection.php:63)\n[previous exception] [object] (PDOException(code: HY000): SQLSTATE[HY000]: General error: 1 no such table: user at C:\\xampp\\htdocs\\Practica\\vendor\\doctrine\\dbal\\lib\\Doctrine\\DBAL\\Driver\\PDOConnection.php:61)"} []
[2020-02-05T16:10:08.422847+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"f62a20"},"request_uri":"https://127.0.0.1:8000/_wdt/f62a20","method":"GET"} []
[2020-02-05T16:10:09.913961+01:00] request.INFO: Matched route "app_register". {"route":"app_register","route_parameters":{"_route":"app_register","_controller":"App\\Controller\\RegisterController::register"},"request_uri":"https://127.0.0.1:8000/register","method":"GET"} []
[2020-02-05T16:10:10.001974+01:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-02-05T16:10:10.002152+01:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2020-02-05T16:10:10.002225+01:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2020-02-05T16:10:10.321524+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-02-05T16:16:09.298360+01:00] console.ERROR: Error thrown while running command ""make:migrations"". Message: "Command "make:migrations" is not defined.  Did you mean one of these?     doctrine:migrations:diff     doctrine:migrations:dump-schema     doctrine:migrations:execute     doctrine:migrations:generate     doctrine:migrations:latest     doctrine:migrations:migrate     doctrine:migrations:rollup     doctrine:migrations:status     doctrine:migrations:up-to-date     doctrine:migrations:version     make:auth     make:command     make:controller     make:crud     make:entity     make:fixtures     make:form     make:functional-test     make:migration     make:registration-form     make:serializer:encoder     make:serializer:normalizer     make:subscriber     make:twig-extension     make:unit-test     make:user     make:validator     make:voter" {"exception":"[object] (Symfony\\Component\\Console\\Exception\\CommandNotFoundException(code: 0): Command \"make:migrations\" is not defined.\n\nDid you mean one of these?\n    doctrine:migrations:diff\n    doctrine:migrations:dump-schema\n    doctrine:migrations:execute\n    doctrine:migrations:generate\n    doctrine:migrations:latest\n    doctrine:migrations:migrate\n    doctrine:migrations:rollup\n    doctrine:migrations:status\n    doctrine:migrations:up-to-date\n    doctrine:migrations:version\n    make:auth\n    make:command\n    make:controller\n    make:crud\n    make:entity\n    make:fixtures\n    make:form\n    make:functional-test\n    make:migration\n    make:registration-form\n    make:serializer:encoder\n    make:serializer:normalizer\n    make:subscriber\n    make:twig-extension\n    make:unit-test\n    make:user\n    make:validator\n    make:voter at C:\\xampp\\htdocs\\Practica\\vendor\\symfony\\console\\Application.php:645)","command":"\"make:migrations\"","message":"Command \"make:migrations\" is not defined.\n\nDid you mean one of these?\n    doctrine:migrations:diff\n    doctrine:migrations:dump-schema\n    doctrine:migrations:execute\n    doctrine:migrations:generate\n    doctrine:migrations:latest\n    doctrine:migrations:migrate\n    doctrine:migrations:rollup\n    doctrine:migrations:status\n    doctrine:migrations:up-to-date\n    doctrine:migrations:version\n    make:auth\n    make:command\n    make:controller\n    make:crud\n    make:entity\n    make:fixtures\n    make:form\n    make:functional-test\n    make:migration\n    make:registration-form\n    make:serializer:encoder\n    make:serializer:normalizer\n    make:subscriber\n    make:twig-extension\n    make:unit-test\n    make:user\n    make:validator\n    make:voter"} []
[2020-02-05T16:16:16.033110+01:00] doctrine.DEBUG: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name [] []
[2020-02-05T16:16:16.085142+01:00] doctrine.DEBUG: CREATE TABLE migration_versions (version VARCHAR(14) NOT NULL, executed_at DATETIME NOT NULL --(DC2Type:datetime_immutable) , PRIMARY KEY(version)) [] []
[2020-02-05T16:16:16.112628+01:00] doctrine.DEBUG: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name [] []
[2020-02-05T16:16:16.113445+01:00] doctrine.DEBUG: PRAGMA table_info('migration_versions') [] []
[2020-02-05T16:16:16.114433+01:00] doctrine.DEBUG: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? ["migration_versions"] []
[2020-02-05T16:16:16.118075+01:00] doctrine.DEBUG: PRAGMA index_list('migration_versions') [] []
[2020-02-05T16:16:16.118549+01:00] doctrine.DEBUG: PRAGMA TABLE_INFO ('migration_versions') [] []
[2020-02-05T16:16:16.119028+01:00] doctrine.DEBUG: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? ["migration_versions"] []
[2020-02-05T16:16:44.308616+01:00] doctrine.DEBUG: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name [] []
[2020-02-05T16:16:44.314115+01:00] doctrine.DEBUG: PRAGMA table_info('migration_versions') [] []
[2020-02-05T16:16:44.340666+01:00] doctrine.DEBUG: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? ["migration_versions"] []
[2020-02-05T16:16:44.342811+01:00] doctrine.DEBUG: PRAGMA index_list('migration_versions') [] []
[2020-02-05T16:16:44.343143+01:00] doctrine.DEBUG: PRAGMA TABLE_INFO ('migration_versions') [] []
[2020-02-05T16:16:44.348493+01:00] doctrine.DEBUG: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? ["migration_versions"] []
[2020-02-05T16:16:44.377400+01:00] doctrine.DEBUG: SELECT version FROM migration_versions [] []
[2020-02-05T16:16:48.178362+01:00] doctrine.DEBUG: SELECT version FROM migration_versions WHERE version IN ('20200122091158', '20200205151616') ORDER BY version DESC LIMIT 1 [] []
[2020-02-05T16:16:48.192932+01:00] doctrine.DEBUG: SELECT version FROM migration_versions [] []
[2020-02-05T16:16:48.205531+01:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-02-05T16:16:48.285291+01:00] doctrine.DEBUG: CREATE TABLE aficiones (id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, nombre VARCHAR(20) NOT NULL) [] []
[2020-02-05T16:16:48.288951+01:00] doctrine.DEBUG: CREATE TABLE ciudades (id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, nombre VARCHAR(40) NOT NULL) [] []
[2020-02-05T16:16:48.291715+01:00] doctrine.DEBUG: CREATE TABLE usuarios (id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, nombre VARCHAR(30) NOT NULL, apellidos VARCHAR(30) NOT NULL, nacimiento DATE NOT NULL, sexo VARCHAR(2) NOT NULL, ciudad_id INTEGER DEFAULT NULL) [] []
[2020-02-05T16:16:48.331749+01:00] doctrine.DEBUG: CREATE TABLE usuarios_aficiones (usuarios_id INTEGER NOT NULL, aficiones_id INTEGER NOT NULL, PRIMARY KEY(usuarios_id, aficiones_id)) [] []
[2020-02-05T16:16:48.333729+01:00] doctrine.DEBUG: INSERT INTO migration_versions (version, executed_at) VALUES (?, ?) ["20200122091158","2020-02-05 15:16:48"] []
[2020-02-05T16:16:48.338322+01:00] doctrine.DEBUG: "COMMIT" [] []
[2020-02-05T16:16:48.355652+01:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-02-05T16:16:48.394648+01:00] doctrine.DEBUG: CREATE TABLE aficiones (id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, nombre VARCHAR(20) NOT NULL) [] []
[2020-02-05T16:16:48.407616+01:00] doctrine.DEBUG: "ROLLBACK" [] []
[2020-02-05T16:16:48.413901+01:00] console.ERROR: Error thrown while running command "doctrine:migrations:migrate". Message: "An exception occurred while executing 'CREATE TABLE aficiones (id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, nombre VARCHAR(20) NOT NULL)':  SQLSTATE[HY000]: General error: 1 table aficiones already exists" {"exception":"[object] (Doctrine\\DBAL\\Exception\\TableExistsException(code: 0): An exception occurred while executing 'CREATE TABLE aficiones (id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, nombre VARCHAR(20) NOT NULL)':\n\nSQLSTATE[HY000]: General error: 1 table aficiones already exists at C:\\xampp\\htdocs\\Practica\\vendor\\doctrine\\dbal\\lib\\Doctrine\\DBAL\\Driver\\AbstractSQLiteDriver.php:47)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDOException(code: HY000): SQLSTATE[HY000]: General error: 1 table aficiones already exists at C:\\xampp\\htdocs\\Practica\\vendor\\doctrine\\dbal\\lib\\Doctrine\\DBAL\\Driver\\PDOConnection.php:80)\n[previous exception] [object] (PDOException(code: HY000): SQLSTATE[HY000]: General error: 1 table aficiones already exists at C:\\xampp\\htdocs\\Practica\\vendor\\doctrine\\dbal\\lib\\Doctrine\\DBAL\\Driver\\PDOConnection.php:75)","command":"doctrine:migrations:migrate","message":"An exception occurred while executing 'CREATE TABLE aficiones (id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, nombre VARCHAR(20) NOT NULL)':\n\nSQLSTATE[HY000]: General error: 1 table aficiones already exists"} []
[2020-02-05T16:16:48.415698+01:00] console.DEBUG: Command "doctrine:migrations:migrate" exited with code "1" {"command":"doctrine:migrations:migrate","code":1} []
[2020-02-05T16:29:07.811885+01:00] console.ERROR: Error thrown while running command "doctrine". Message: "Command "doctrine" is not defined.  Did you mean one of these?     doctrine:cache:clear-collection-region     doctrine:cache:clear-entity-region     doctrine:cache:clear-metadata     doctrine:cache:clear-query     doctrine:cache:clear-query-region     doctrine:cache:clear-result     doctrine:database:create     doctrine:database:drop     doctrine:database:import     doctrine:ensure-production-settings     doctrine:mapping:convert     doctrine:mapping:import     doctrine:mapping:info     doctrine:migrations:diff     doctrine:migrations:dump-schema     doctrine:migrations:execute     doctrine:migrations:generate     doctrine:migrations:latest     doctrine:migrations:migrate     doctrine:migrations:rollup     doctrine:migrations:status     doctrine:migrations:up-to-date     doctrine:migrations:version     doctrine:query:dql     doctrine:query:sql     doctrine:schema:create     doctrine:schema:drop     doctrine:schema:update     doctrine:schema:validate" {"exception":"[object] (Symfony\\Component\\Console\\Exception\\CommandNotFoundException(code: 0): Command \"doctrine\" is not defined.\n\nDid you mean one of these?\n    doctrine:cache:clear-collection-region\n    doctrine:cache:clear-entity-region\n    doctrine:cache:clear-metadata\n    doctrine:cache:clear-query\n    doctrine:cache:clear-query-region\n    doctrine:cache:clear-result\n    doctrine:database:create\n    doctrine:database:drop\n    doctrine:database:import\n    doctrine:ensure-production-settings\n    doctrine:mapping:convert\n    doctrine:mapping:import\n    doctrine:mapping:info\n    doctrine:migrations:diff\n    doctrine:migrations:dump-schema\n    doctrine:migrations:execute\n    doctrine:migrations:generate\n    doctrine:migrations:latest\n    doctrine:migrations:migrate\n    doctrine:migrations:rollup\n    doctrine:migrations:status\n    doctrine:migrations:up-to-date\n    doctrine:migrations:version\n    doctrine:query:dql\n    doctrine:query:sql\n    doctrine:schema:create\n    doctrine:schema:drop\n    doctrine:schema:update\n    doctrine:schema:validate at C:\\xampp\\htdocs\\Practica\\vendor\\symfony\\console\\Application.php:645)","command":"doctrine","message":"Command \"doctrine\" is not defined.\n\nDid you mean one of these?\n    doctrine:cache:clear-collection-region\n    doctrine:cache:clear-entity-region\n    doctrine:cache:clear-metadata\n    doctrine:cache:clear-query\n    doctrine:cache:clear-query-region\n    doctrine:cache:clear-result\n    doctrine:database:create\n    doctrine:database:drop\n    doctrine:database:import\n    doctrine:ensure-production-settings\n    doctrine:mapping:convert\n    doctrine:mapping:import\n    doctrine:mapping:info\n    doctrine:migrations:diff\n    doctrine:migrations:dump-schema\n    doctrine:migrations:execute\n    doctrine:migrations:generate\n    doctrine:migrations:latest\n    doctrine:migrations:migrate\n    doctrine:migrations:rollup\n    doctrine:migrations:status\n    doctrine:migrations:up-to-date\n    doctrine:migrations:version\n    doctrine:query:dql\n    doctrine:query:sql\n    doctrine:schema:create\n    doctrine:schema:drop\n    doctrine:schema:update\n    doctrine:schema:validate"} []
[2020-02-05T16:29:20.785517+01:00] doctrine.DEBUG: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name [] []
[2020-02-05T16:29:20.790931+01:00] doctrine.DEBUG: PRAGMA table_info('aficiones') [] []
[2020-02-05T16:29:20.795760+01:00] doctrine.DEBUG: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? ["aficiones"] []
[2020-02-05T16:29:20.797861+01:00] doctrine.DEBUG: PRAGMA index_list('aficiones') [] []
[2020-02-05T16:29:20.798150+01:00] doctrine.DEBUG: PRAGMA TABLE_INFO ('aficiones') [] []
[2020-02-05T16:29:20.803344+01:00] doctrine.DEBUG: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? ["aficiones"] []
[2020-02-05T16:29:20.804032+01:00] doctrine.DEBUG: PRAGMA table_info('ciudades') [] []
[2020-02-05T16:29:20.804348+01:00] doctrine.DEBUG: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? ["ciudades"] []
[2020-02-05T16:29:20.804632+01:00] doctrine.DEBUG: PRAGMA index_list('ciudades') [] []
[2020-02-05T16:29:20.804868+01:00] doctrine.DEBUG: PRAGMA TABLE_INFO ('ciudades') [] []
[2020-02-05T16:29:20.805118+01:00] doctrine.DEBUG: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? ["ciudades"] []
[2020-02-05T16:29:20.805511+01:00] doctrine.DEBUG: PRAGMA table_info('migration_versions') [] []
[2020-02-05T16:29:20.805812+01:00] doctrine.DEBUG: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? ["migration_versions"] []
[2020-02-05T16:29:20.806496+01:00] doctrine.DEBUG: PRAGMA index_list('migration_versions') [] []
[2020-02-05T16:29:20.806768+01:00] doctrine.DEBUG: PRAGMA TABLE_INFO ('migration_versions') [] []
[2020-02-05T16:29:20.807049+01:00] doctrine.DEBUG: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? ["migration_versions"] []
[2020-02-05T16:29:20.807389+01:00] doctrine.DEBUG: PRAGMA table_info('usuarios') [] []
[2020-02-05T16:29:20.807748+01:00] doctrine.DEBUG: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? ["usuarios"] []
[2020-02-05T16:29:20.808510+01:00] doctrine.DEBUG: PRAGMA index_list('usuarios') [] []
[2020-02-05T16:29:20.808729+01:00] doctrine.DEBUG: PRAGMA TABLE_INFO ('usuarios') [] []
[2020-02-05T16:29:20.808998+01:00] doctrine.DEBUG: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? ["usuarios"] []
[2020-02-05T16:29:20.809311+01:00] doctrine.DEBUG: PRAGMA table_info('usuarios_aficiones') [] []
[2020-02-05T16:29:20.809584+01:00] doctrine.DEBUG: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? ["usuarios_aficiones"] []
[2020-02-05T16:29:20.809983+01:00] doctrine.DEBUG: PRAGMA index_list('usuarios_aficiones') [] []
[2020-02-05T16:29:20.810345+01:00] doctrine.DEBUG: PRAGMA TABLE_INFO ('usuarios_aficiones') [] []
[2020-02-05T16:29:20.810608+01:00] doctrine.DEBUG: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? ["usuarios_aficiones"] []
[2020-02-05T16:29:20.876788+01:00] console.DEBUG: Command "doctrine:schema:update" exited with code "1" {"command":"doctrine:schema:update","code":1} []
[2020-02-05T16:29:35.138310+01:00] doctrine.DEBUG: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name [] []
[2020-02-05T16:29:35.144077+01:00] doctrine.DEBUG: PRAGMA table_info('aficiones') [] []
[2020-02-05T16:29:35.149061+01:00] doctrine.DEBUG: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? ["aficiones"] []
[2020-02-05T16:29:35.151318+01:00] doctrine.DEBUG: PRAGMA index_list('aficiones') [] []
[2020-02-05T16:29:35.151637+01:00] doctrine.DEBUG: PRAGMA TABLE_INFO ('aficiones') [] []
[2020-02-05T16:29:35.157256+01:00] doctrine.DEBUG: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? ["aficiones"] []
[2020-02-05T16:29:35.157991+01:00] doctrine.DEBUG: PRAGMA table_info('ciudades') [] []
[2020-02-05T16:29:35.158312+01:00] doctrine.DEBUG: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? ["ciudades"] []
[2020-02-05T16:29:35.158589+01:00] doctrine.DEBUG: PRAGMA index_list('ciudades') [] []
[2020-02-05T16:29:35.158805+01:00] doctrine.DEBUG: PRAGMA TABLE_INFO ('ciudades') [] []
[2020-02-05T16:29:35.159056+01:00] doctrine.DEBUG: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? ["ciudades"] []
[2020-02-05T16:29:35.159379+01:00] doctrine.DEBUG: PRAGMA table_info('migration_versions') [] []
[2020-02-05T16:29:35.159639+01:00] doctrine.DEBUG: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? ["migration_versions"] []
[2020-02-05T16:29:35.160271+01:00] doctrine.DEBUG: PRAGMA index_list('migration_versions') [] []
[2020-02-05T16:29:35.160502+01:00] doctrine.DEBUG: PRAGMA TABLE_INFO ('migration_versions') [] []
[2020-02-05T16:29:35.160772+01:00] doctrine.DEBUG: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? ["migration_versions"] []
[2020-02-05T16:29:35.161139+01:00] doctrine.DEBUG: PRAGMA table_info('usuarios') [] []
[2020-02-05T16:29:35.161484+01:00] doctrine.DEBUG: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? ["usuarios"] []
[2020-02-05T16:29:35.162375+01:00] doctrine.DEBUG: PRAGMA index_list('usuarios') [] []
[2020-02-05T16:29:35.162644+01:00] doctrine.DEBUG: PRAGMA TABLE_INFO ('usuarios') [] []
[2020-02-05T16:29:35.162955+01:00] doctrine.DEBUG: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? ["usuarios"] []
[2020-02-05T16:29:35.163313+01:00] doctrine.DEBUG: PRAGMA table_info('usuarios_aficiones') [] []
[2020-02-05T16:29:35.163627+01:00] doctrine.DEBUG: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? ["usuarios_aficiones"] []
[2020-02-05T16:29:35.164113+01:00] doctrine.DEBUG: PRAGMA index_list('usuarios_aficiones') [] []
[2020-02-05T16:29:35.164481+01:00] doctrine.DEBUG: PRAGMA TABLE_INFO ('usuarios_aficiones') [] []
[2020-02-05T16:29:35.164744+01:00] doctrine.DEBUG: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? ["usuarios_aficiones"] []
[2020-02-05T16:29:35.176130+01:00] doctrine.DEBUG: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name [] []
[2020-02-05T16:29:35.176923+01:00] doctrine.DEBUG: PRAGMA table_info('aficiones') [] []
[2020-02-05T16:29:35.177398+01:00] doctrine.DEBUG: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? ["aficiones"] []
[2020-02-05T16:29:35.177789+01:00] doctrine.DEBUG: PRAGMA index_list('aficiones') [] []
[2020-02-05T16:29:35.178011+01:00] doctrine.DEBUG: PRAGMA TABLE_INFO ('aficiones') [] []
[2020-02-05T16:29:35.178287+01:00] doctrine.DEBUG: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? ["aficiones"] []
[2020-02-05T16:29:35.178558+01:00] doctrine.DEBUG: PRAGMA table_info('ciudades') [] []
[2020-02-05T16:29:35.178848+01:00] doctrine.DEBUG: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? ["ciudades"] []
[2020-02-05T16:29:35.179152+01:00] doctrine.DEBUG: PRAGMA index_list('ciudades') [] []
[2020-02-05T16:29:35.179365+01:00] doctrine.DEBUG: PRAGMA TABLE_INFO ('ciudades') [] []
[2020-02-05T16:29:35.179635+01:00] doctrine.DEBUG: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? ["ciudades"] []
[2020-02-05T16:29:35.179943+01:00] doctrine.DEBUG: PRAGMA table_info('migration_versions') [] []
[2020-02-05T16:29:35.180227+01:00] doctrine.DEBUG: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? ["migration_versions"] []
[2020-02-05T16:29:35.180521+01:00] doctrine.DEBUG: PRAGMA index_list('migration_versions') [] []
[2020-02-05T16:29:35.180734+01:00] doctrine.DEBUG: PRAGMA TABLE_INFO ('migration_versions') [] []
[2020-02-05T16:29:35.181035+01:00] doctrine.DEBUG: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? ["migration_versions"] []
[2020-02-05T16:29:35.181338+01:00] doctrine.DEBUG: PRAGMA table_info('usuarios') [] []
[2020-02-05T16:29:35.181688+01:00] doctrine.DEBUG: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? ["usuarios"] []
[2020-02-05T16:29:35.182145+01:00] doctrine.DEBUG: PRAGMA index_list('usuarios') [] []
[2020-02-05T16:29:35.182376+01:00] doctrine.DEBUG: PRAGMA TABLE_INFO ('usuarios') [] []
[2020-02-05T16:29:35.182677+01:00] doctrine.DEBUG: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? ["usuarios"] []
[2020-02-05T16:29:35.183010+01:00] doctrine.DEBUG: PRAGMA table_info('usuarios_aficiones') [] []
[2020-02-05T16:29:35.183294+01:00] doctrine.DEBUG: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? ["usuarios_aficiones"] []
[2020-02-05T16:29:35.183574+01:00] doctrine.DEBUG: PRAGMA index_list('usuarios_aficiones') [] []
[2020-02-05T16:29:35.183802+01:00] doctrine.DEBUG: PRAGMA TABLE_INFO ('usuarios_aficiones') [] []
[2020-02-05T16:29:35.184208+01:00] doctrine.DEBUG: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? ["usuarios_aficiones"] []
[2020-02-05T16:29:35.185724+01:00] doctrine.DEBUG: CREATE TABLE user (id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, email VARCHAR(180) NOT NULL, roles CLOB NOT NULL --(DC2Type:json) , password VARCHAR(255) NOT NULL) [] []
[2020-02-05T16:29:35.214419+01:00] doctrine.DEBUG: CREATE UNIQUE INDEX UNIQ_8D93D649E7927C74 ON user (email) [] []
[2020-02-05T16:30:00.825065+01:00] request.INFO: Matched route "app_register". {"route":"app_register","route_parameters":{"_route":"app_register","_controller":"App\\Controller\\RegisterController::register"},"request_uri":"https://127.0.0.1:8000/register","method":"POST"} []
[2020-02-05T16:30:00.965564+01:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-02-05T16:30:00.965722+01:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2020-02-05T16:30:00.965810+01:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2020-02-05T16:30:00.981656+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-02-05T16:30:02.524125+01:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-02-05T16:30:02.543550+01:00] doctrine.DEBUG: INSERT INTO user (email, roles, password) VALUES (?, ?, ?) {"1":"Jorgito@gmail.com","2":["ROLE_ADMIN"],"3":"$2y$13$BW7/czB1N8nfMFgkJih [...]"} []
[2020-02-05T16:30:02.552036+01:00] doctrine.DEBUG: "COMMIT" [] []
[2020-02-05T16:30:03.396422+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"https://127.0.0.1:8000/home","method":"GET"} []
[2020-02-05T16:30:03.499732+01:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-02-05T16:30:03.500045+01:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2020-02-05T16:30:03.500227+01:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2020-02-05T16:30:03.615951+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-02-05T16:30:04.329581+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"13842b"},"request_uri":"https://127.0.0.1:8000/_wdt/13842b","method":"GET"} []
[2020-02-05T16:30:05.896109+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"https://127.0.0.1:8000/home","method":"GET"} []
[2020-02-05T16:30:06.021949+01:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-02-05T16:30:06.022146+01:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2020-02-05T16:30:06.022233+01:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2020-02-05T16:30:06.117051+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-02-05T16:35:48.254694+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"https://127.0.0.1:8000/home","method":"GET"} []
[2020-02-05T16:35:48.370938+01:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-02-05T16:35:48.371283+01:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2020-02-05T16:35:48.371376+01:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2020-02-05T16:35:48.500802+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-02-05T16:35:51.689421+01:00] request.INFO: Matched route "app_register". {"route":"app_register","route_parameters":{"_route":"app_register","_controller":"App\\Controller\\RegisterController::register"},"request_uri":"https://127.0.0.1:8000/register","method":"GET"} []
[2020-02-05T16:35:51.774429+01:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-02-05T16:35:51.774605+01:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2020-02-05T16:35:51.774677+01:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2020-02-05T16:35:52.165937+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-02-05T16:35:52.858603+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"acd7b3"},"request_uri":"https://127.0.0.1:8000/_wdt/acd7b3","method":"GET"} []
[2020-02-05T16:35:54.408448+01:00] request.INFO: Matched route "app_register". {"route":"app_register","route_parameters":{"_route":"app_register","_controller":"App\\Controller\\RegisterController::register"},"request_uri":"https://127.0.0.1:8000/register","method":"GET"} []
[2020-02-05T16:35:54.517583+01:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-02-05T16:35:54.517745+01:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2020-02-05T16:35:54.517817+01:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2020-02-05T16:35:54.802806+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-02-05T16:36:07.938316+01:00] request.INFO: Matched route "app_register". {"route":"app_register","route_parameters":{"_route":"app_register","_controller":"App\\Controller\\RegisterController::register"},"request_uri":"https://127.0.0.1:8000/register","method":"POST"} []
[2020-02-05T16:36:08.040532+01:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-02-05T16:36:08.040701+01:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2020-02-05T16:36:08.040775+01:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2020-02-05T16:36:08.050349+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-02-05T16:36:09.399025+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"3f6d93"},"request_uri":"https://127.0.0.1:8000/_wdt/3f6d93","method":"GET"} []
[2020-02-05T16:36:10.896057+01:00] request.INFO: Matched route "app_register". {"route":"app_register","route_parameters":{"_route":"app_register","_controller":"App\\Controller\\RegisterController::register"},"request_uri":"https://127.0.0.1:8000/register","method":"GET"} []
[2020-02-05T16:36:10.994686+01:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-02-05T16:36:10.994974+01:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2020-02-05T16:36:10.995056+01:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2020-02-05T16:36:11.344926+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-02-05T16:36:16.423654+01:00] request.INFO: Matched route "app_register". {"route":"app_register","route_parameters":{"_route":"app_register","_controller":"App\\Controller\\RegisterController::register"},"request_uri":"https://127.0.0.1:8000/register","method":"POST"} []
[2020-02-05T16:36:16.510068+01:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-02-05T16:36:16.510222+01:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2020-02-05T16:36:16.510295+01:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2020-02-05T16:36:16.518262+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-02-05T16:36:17.679296+01:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-02-05T16:36:17.691557+01:00] doctrine.DEBUG: INSERT INTO user (email, roles, password) VALUES (?, ?, ?) {"1":"jaimetilted@gmail.com","2":[],"3":"$2y$13$VJM1nslvFbLOhWqHUQ0 [...]"} []
[2020-02-05T16:36:17.699060+01:00] doctrine.DEBUG: "COMMIT" [] []
[2020-02-05T16:36:18.453812+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"https://127.0.0.1:8000/home","method":"GET"} []
[2020-02-05T16:36:18.582515+01:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-02-05T16:36:18.582697+01:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2020-02-05T16:36:18.582770+01:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2020-02-05T16:36:18.670545+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-02-05T16:36:19.368895+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"2555fb"},"request_uri":"https://127.0.0.1:8000/_wdt/2555fb","method":"GET"} []
[2020-02-05T16:36:21.054215+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"https://127.0.0.1:8000/home","method":"GET"} []
[2020-02-05T16:36:21.150785+01:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2020-02-05T16:36:21.151067+01:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2020-02-05T16:36:21.151209+01:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2020-02-05T16:36:21.295608+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
